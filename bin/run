#!/usr/bin/env ruby

require "bundler"
Bundler.setup(:default)

require"lapidar"
require_relative "../lib/game"
require_relative "../lib/player"
require_relative "../lib/turn"

Thread.abort_on_exception = true

puts "Starting gameâ€¦"

lapidar = Lapidar.runner(port: 9999, neighbors: [
  { host: "localhost", port: 9998 }
])

blockchain_thread = Thread.new { lapidar.start }

my_player = Player.new

loop do
  all_preferred_blocks = lapidar.chain.blocks

  # Setup latest game and retrieve the blocks relevant for it with an offset
  turns_per_game = 50 * 50
  last_game_offset = - (all_preferred_blocks.length % turns_per_game)
  blocks_of_last_game = lapidar.chain.blocks[last_game_offset..-1].clone
  last_game = Game.new(width: 50, height: 50)

  # Replay all blocks of the last game
  blocks_of_last_game.each do |block|
    last_game.submit(Turn.from_str(block.data))
  end

  # Come up with a new turn to play
  my_turn = my_player.produce_turn(last_game)

  # Submit my turn to the miner and the blockchain
  lapidar.punch_queue << my_turn.to_s
end

blockchain_thread.join
